{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import React, {useEffect, useState } from 'react';\n\nconst CONFIGLY_SERVER_URL = \"http://configly.herokuapp.com/api/v1/value\";\nconst CONFIGLY_API_KEY = 'hq0t7YiT3NwEnoknH4fp6EHL66pOcDjv';\n\ninterface props {\n    prop: string,\n    render: (value: string) => JSX.Element,\n}\n\nfunction loadConfiglyData(key: string, onComplete: (data: string) => any) {\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(`${CONFIGLY_API_KEY}:`));\n    fetch(`${CONFIGLY_SERVER_URL}?keys[]=${key}`, {method: 'GET', headers})\n      .then(res => res.json())\n      .then((result) => onComplete(result.data[key].value), (error) => {console.log(error)});\n}\n\nfunction BaseConfiglyComponent(props: props) {\n    const [value, setValue] = useState(null);\n    const [requestInProgress, setRequestInProgress] = useState(false);\n\n    useEffect(() => {\n        if (!requestInProgress && !value) {\n            loadConfiglyData(props.prop, (value: any) => {setValue(value); setRequestInProgress(false);});\n            setRequestInProgress(true);\n        }\n    }, [requestInProgress, value, props.prop]);\n\n    if (value == null) {\n        return(<span>Loading...</span>);\n    }\n    return(props.render(value || ''));\n}\n\nfunction ConfiglyComponent(props: props) {\n    return (<BaseConfiglyComponent prop={props.prop} render={props.render} />);\n}\n\nfunction ConfiglyText(props: props) {\n    return (<BaseConfiglyComponent prop={props.prop} render={(value: string) => { return (<span>{value}</span>)}} />);\n}\n\nfunction ConfiglyDropdown(props: props) {\n    const renderDropdown =(value: string) => {\n        const options = Object.keys(value).map((key) =>\n            <option value={key}>{value[key]}</option>\n        );\n\n        return (<select>{options}</select>);\n    }\n    return (<BaseConfiglyComponent prop={props.prop} render={renderDropdown} />);\n}\n\nexport {ConfiglyText, ConfiglyDropdown, ConfiglyComponent as default};"],"names":["useState","useEffect","React"],"mappings":";;;;;;;;AAEA,IAAM,mBAAmB,GAAG,4CAA4C,CAAC;AACzE,IAAM,gBAAgB,GAAG,kCAAkC,CAAC;AAO5D,SAAS,gBAAgB,CAAC,GAAW,EAAE,UAAiC;IACpE,IAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;IAC9B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAAI,gBAAgB,MAAG,CAAC,CAAC,CAAC;IACzE,KAAK,CAAI,mBAAmB,gBAAW,GAAK,EAAE,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,SAAA,EAAC,CAAC;SACpE,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,GAAA,CAAC;SACvB,IAAI,CAAC,UAAC,MAAM,IAAK,OAAA,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAA,EAAE,UAAC,KAAK,IAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA,EAAC,CAAC,CAAC;AAC7F,CAAC;AAED,SAAS,qBAAqB,CAAC,KAAY;IACjC,IAAA,KAAoBA,cAAQ,CAAC,IAAI,CAAC,EAAjC,KAAK,QAAA,EAAE,QAAQ,QAAkB,CAAC;IACnC,IAAA,KAA4CA,cAAQ,CAAC,KAAK,CAAC,EAA1D,iBAAiB,QAAA,EAAE,oBAAoB,QAAmB,CAAC;IAElEC,eAAS,CAAC;QACN,IAAI,CAAC,iBAAiB,IAAI,CAAC,KAAK,EAAE;YAC9B,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,UAAC,KAAU,IAAM,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;YAC9F,oBAAoB,CAAC,IAAI,CAAC,CAAC;SAC9B;KACJ,EAAE,CAAC,iBAAiB,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAE3C,IAAI,KAAK,IAAI,IAAI,EAAE;QACf,QAAOC,mEAAuB,EAAE;KACnC;IACD,QAAO,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE;AACtC,CAAC;AAED,SAAS,iBAAiB,CAAC,KAAY;IACnC,QAAQA,wCAAC,qBAAqB,IAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,GAAI,EAAE;AAC/E,CAAC;AAED,SAAS,YAAY,CAAC,KAAY;IAC9B,QAAQA,wCAAC,qBAAqB,IAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,UAAC,KAAa,IAAO,QAAQA,sDAAO,KAAK,CAAQ,EAAC,EAAC,GAAI,EAAE;AACtH,CAAC;AAED,SAAS,gBAAgB,CAAC,KAAY;IAClC,IAAM,cAAc,GAAE,UAAC,KAAa;QAChC,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG;YACvC,OAAAA,oDAAQ,KAAK,EAAE,GAAG,IAAG,KAAK,CAAC,GAAG,CAAC,CAAU;SAAA,CAC5C,CAAC;QAEF,QAAQA,wDAAS,OAAO,CAAU,EAAE;KACvC,CAAA;IACD,QAAQA,wCAAC,qBAAqB,IAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,cAAc,GAAI,EAAE;AACjF;;;;;;"}